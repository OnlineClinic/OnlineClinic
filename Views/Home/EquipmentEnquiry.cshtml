@model MyOnlineClinic.Web.Models.CommunicationViewModel
@{
    ViewBag.Title = "EquipmentEnquiry";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .testsize {
        margin-top: 0px;
        margin-bottom: 0px;
        height: 266px !important;
    }
</style>

<div class="right_col" role="main">
    <div class="">
        <div class="page-title">
            <div class="title_left">
            </div>
        </div>
        <div class="clearfix"></div>
        <div class="row">
            <div class="col-md-12 col-sm-12 col-xs-12">
                <div class="x_panel">
                    <div class="x_title">
                        <h3 style="text-align:center;">Equipment Services Request</h3>
                      
                        <div class="clearfix"></div>
                    </div>
                    <div class="x_content">
                        @using (Html.BeginForm("EquipmentEnquiry", "Home", FormMethod.Post, new { @class = "form-horizontal form-label-left" }))
                        {
                              <div class="item form-group">
                                <label class="control-label col-md-3 col-sm-3 col-xs-12" for="name">
                                    Equipment <span class="required">*</span>
                                </label>
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.DropDownList("Equipment", new List<SelectListItem>
                                    {
                                         new SelectListItem{ Text="--Select--", Value = "" },
                                        new SelectListItem{ Text="Electrocardiograph(ECG)", Value = "Electrocardiograph(ECG)" },
                                        new SelectListItem{ Text="Glucometer(Blood Sugar)", Value = "Glucometer(Blood Sugar)" },
                                        new SelectListItem{ Text="Stethoscope(Heart & Lung Sounds)", Value = "Stethoscope(Heart & Lung Sounds)" },
                                        new SelectListItem{ Text="Thermometer(Body Temperature)", Value = "Thermometer(Body Temperature)" },
                                        new SelectListItem{ Text="Oximeter(Blood Oxygen)", Value = "Oximeter(Blood Oxygen)" },
                                        new SelectListItem{ Text="Otoscope(ENT)", Value = "Otoscope(ENT)" },
                                        new SelectListItem{ Text="Weight scale(Weight)", Value = "Weight scale(Weight)" },
                                        new SelectListItem{ Text="Sphygmomanometer(Blood Pressure)", Value = "Sphygmomanometer(Blood Pressure)" },

                                     }, new { @class = "form-control col-md-7 col-xs-12 text_row", required = "required" })
                                </div>
                            </div>
                            <div class="item form-group">
                                <label class="control-label col-md-3 col-sm-3 col-xs-12" for="name">
                                    Name <span class="required">*</span>
                                </label>
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.TextBoxFor(x => x.UserName, new { @class = "form-control col-md-7 col-xs-12", name = "UserName", placeholder = "Enter Your Name", required = "required" })
                                </div>
                            </div>
                            <div class="item form-group">
                                <label class="control-label col-md-3 col-sm-3 col-xs-12" for="name">
                                    Email <span class="required">*</span>
                                </label>
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.TextBoxFor(x => x.Email, new { @class = "form-control col-md-7 col-xs-12", name = "Email", placeholder = "Enter Your Email", required = "required", type = "email" })
                                </div>
                            </div>
                            <div class="item form-group">
                                <label class="control-label col-md-3 col-sm-3 col-xs-12" for="name">
                                   Message <span class="required">*</span>
                                </label>
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.TextAreaFor(x => x.Message, new { @class = "testsize form-control col-md-7 col-xs-12 ", name = "Message", placeholder = "Enter Your Message", required = "required" })
                               
                                </div>
                            </div>
                            <div class="ln_solid"></div>
                            <div class="form-group">
                                <div class="col-md-6 col-md-offset-3" style="text-align:center">
                                    
                                    <button id="send" type="submit" class="btn btn-success">Submit</button>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="/AdminAssets/js/validator/validator.js"></script>
@Html.Partial("_FooterPartial")
<script>
    validator.message['date'] = 'not a real date';

    // validate a field on "blur" event, a 'select' on 'change' event & a '.reuired' classed multifield on 'keyup':
    $('form')
        .on('blur', 'input[required], input.optional, select.required', validator.checkField)
        .on('change', 'select.required', validator.checkField)
        .on('keypress', 'input[required][pattern]', validator.keypress);

    $('.multi.required')
        .on('keyup blur', 'input', function () {
            validator.checkField.apply($(this).siblings().last()[0]);
        });

    // bind the validation to the form submit event
    //$('#send').click('submit');//.prop('disabled', true);

    $('form').submit(function (e) {
        e.preventDefault();
        var submit = true;
        // evaluate the form using generic validaing
        if (!validator.checkAll($(this))) {
            submit = false;
        }

        if (submit)
            this.submit();
        return false;
    });

    /* FOR DEMO ONLY */
    $('#vfields').change(function () {
        $('form').toggleClass('mode2');
    }).prop('checked', false);

    $('#alerts').change(function () {
        validator.defaults.alerts = (this.checked) ? false : true;
        if (this.checked)
            $('form .alert').remove();
    }).prop('checked', false);

</script>
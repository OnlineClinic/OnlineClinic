@model MyOnlineClinic.Web.Models.OrganizationUserViewModel

@{
    ViewBag.Title = "AddOrganizationUser";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}
@using JQueryUIHelpers;
@using Share.Bonnet.AjaxDropDownList;
@Scripts.Render("~/bundles/bonnet")
<script src="/scripts/jquery.plugin.js"></script>
<script src="/scripts/jquery.datepick.js"></script>
<link href="/scripts/jquery.datepick.css" rel="stylesheet" />

<style>
    table.sub_table {
        padding: 9px 6px !important;
        margin-bottom: 0px;
        background-color: #f5f5f5;
        border-radius: 4px;
        -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.05);
        box-shadow: inset 0 1px 1px rgba(0,0,0,.05);
        position: relative;
        left: -10%;
        margin: 7px;
        line-height: 25px;
        width: 230px;
    }

    input.main_checkbox {
        height: 20px !important;
        width: 17px !important;
        box-shadow: none !important;
        margin-left: 15px;
    }

    em.icon-fixed-width.fa.fa-plus {
        color: #fff;
        background: black;
        padding: 1px;
        border-radius: 50%;
    }

    em.icon-fixed-width.fa.fa-minus {
        color: #fff;
        background: black;
        padding: 6px;
        border-radius: 50%;
        position: relative;
    }

    span.add_staff {
        color: #fff;
        margin-left: 4px;
    }

    span.sub_name {
        margin-left: 5px;
    }

    table#permissions {
        line-height: 35px;
    }

    table > tbody > tr > td {
        vertical-align: top !important;
    }

    .col-md-4.col-xs-12.second.layer.six::-webkit-scrollbar-track {
        -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);
        background-color: #F5F5F5;
    }

    .col-md-4.col-xs-12.second.layer.six::-webkit-scrollbar {
        width: 8px;
        height: 6px;
        background-color: #F5F5F5;
    }

    .col-md-4.col-xs-12.second.layer.six::-webkit-scrollbar-thumb {
        background-color: rgba(8, 163, 155, 0.43);
    }

    .col-md-4.col-xs-12.second.layer.six {
        padding: 11px;
        margin-top: 19px;
        background: rgb(8, 163, 155);
        box-shadow: 2px 5px 5px #888888;
        float: right;
        margin-right: 35px;
        border-radius: 7px;
        height: 431px;
        overflow-x: hidden;
    }
</style>

<section class="content-header staff">
    <h1 class="underline7">
        Fill Organisation Staff Information
    </h1>
</section>
        @using (Html.BeginForm("AddOrganizationUser", "Organization", FormMethod.Post, new { @class = "form-horizontal form-label-left", enctype = "multipart/form-data" }))
{

    <div class="row">
        <div class="col-md-12">
            <div class="col-md-7 first_layer">
                <div class="form-horizontal" id="style-3">
                    <div class="box-body">
                        <div class="form-group role">
                            <label for="inputEmail3" class="col-sm-4 control-label">Organisation:</label>
                            <div class="col-sm-6">
                                @Html.DropDownListFor(x => x.OrgId, new SelectList(Model.OrgDropDown, "Value", "Text"), "---Select Organization---", new { @class = "form-control", required = "required" })
                            </div>
                        </div>
                        <div class="form-group role">
                            <label for="inputEmail3" class="col-sm-4 control-label">Role:</label>
                            <div class="col-sm-6">
                                @Html.DropDownListFor(x => x.OrgUsreRole, new SelectList(Model.UserRoleList, "Id", "RoleName"), "---Select Role---", new { @class = "form-control col-md-7 col-xs-12", required = "required" })
                            </div>
                        </div>
                        <div class="form-group role" style="margin-top:-3px;">
                            <label for="inputEmail3" class="col-sm-4 control-label">Title:</label>
                            <div class="col-sm-6">
                                @Html.DropDownListFor(x => x.Titleid, new SelectList(Model.TitleList, "TitleId", "TitleName"), "---Select Title---", new { @class = "form-control col-md-7 col-xs-12", required = "required" })
                            </div>
                        </div>
                        <div class="form-group role" style="margin-top:-3px;">
                            <label for="inputEmail3" class="col-sm-4 control-label">First Name:</label>
                            <div class="col-sm-6">
                                @Html.TextBoxFor(x => x.FirstName, new { @class = "form-control col-md-7 col-xs-12", name = "FirstName", required = "required" })
                            </div>
                        </div>
                        <div class="form-group role" style="margin-top:-3px;">
                            <label for="inputEmail3" class="col-sm-4 control-label">Middle Name:</label>
                            <div class="col-sm-6">
                                @Html.TextBoxFor(x => x.MiddleName, new { @class = "form-control col-md-7 col-xs-12", name = "MiddleName" })
                            </div>
                        </div>
                        <div class="form-group role" style="margin-top:-3px;">
                            <label for="inputEmail3" class="col-sm-4 control-label">Last Name:</label>
                            <div class="col-sm-6">
                                @Html.TextBoxFor(x => x.SurName, new { @class = "form-control col-md-7 col-xs-12", name = "LastName", required = "required" })
                            </div>
                        </div>
                        <div class="form-group role" style="margin-top:-3px;">
                            <label for="inputEmail3" class="col-sm-4 control-label">Email:-</label>
                            <div class="col-sm-6">
                                @Html.TextBoxFor(x => x.Email, new { @class = "form-control col-md-7 col-xs-12", name = "Email", required = "required", type = "email" })
                                @Html.ValidationMessage("Email")


                            </div>
                        </div>
                        <div class="form-group role" style="margin-top:-3px;">
                            <label for="inputEmail3" class="col-sm-4 control-label">Phone Number:</label>
                            <div class="col-sm-6">
                                @Html.TextBoxFor(x => x.PhoneNumber, new { @class = "form-control col-md-7 col-xs-12", name = "PhoneNumber", required = "required", onkeypress = "return isNumber(event)" })
                            </div>
                        </div>
                        <div class="form-group role" style="margin-top:-3px;">
                            <label for="inputEmail3" class="col-sm-4 control-label">Fax Number:</label>
                            <div class="col-sm-6">
                                @Html.TextBoxFor(x => x.FaxNumber, new { @class = "form-control col-md-7 col-xs-12", name = "FaxNumber", required = "required", onkeypress = "return isNumber(event)" })
                            </div>
                        </div>
                        <div class="form-group role" style="margin-top:-3px;">
                            <label for="inputEmail3" class="col-sm-4 control-label">Address 1:</label>
                            <div class="col-sm-6">
                                @Html.TextBoxFor(x => x.Address1, new { @class = "form-control col-md-7 col-xs-12", name = "Address1", required = "required" })
                            </div>
                        </div>
                        <div class="form-group role" style="margin-top:-3px;">
                            <label for="inputEmail3" class="col-sm-4 control-label">Address 2:</label>
                            <div class="col-sm-6">
                                @Html.TextBoxFor(x => x.Address2, new { @class = "form-control col-md-7 col-xs-12", name = "Address2", required = "required" })
                            </div>
                        </div>
                        <div class="form-group role" style="margin-top:-3px;">
                            <label for="inputEmail3" class="col-sm-4 control-label">Country:</label>
                            <div class="col-sm-6">
                                @Html.DropDownListFor(x => x.CountryId, new SelectList(Model.Countries, "CountryId", "CountryName"), "--Select Country--",
                        new { @class = "form-control" },
                        Ajax.UpdateActionFor(
                                    model => model.State,
                            new AjaxUpdateOptions
                            {
                                DisableTargetWhenEmpty = true,
                                Url = Url.Action("GetStateInCountry", "Home", new { @area = "" })
                            }
                            ))
                                @Html.ValidationMessageFor(x => x.CountryId)
                                @*@Html.DropDownListFor(x => x.CountryId, new SelectList(Model.Countries, "CountryId", "CountryName"), "---Select Country---", new { @class = "form-control col-md-7 col-xs-12", required = "required" })*@
                            </div>
                        </div>
                        <div class="form-group role" style="margin-top:-3px;">
                            <label for="inputEmail3" class="col-sm-4 control-label">State:</label>
                            <div class="col-sm-6">
                                @Html.DropDownListFor(x => x.State, new SelectList(Model.StateList, "Id", "StateName"), "--Select State--",
                                        new { @class = "form-control", @id = "State" },
                                            Ajax.UpdateActionFor(
                                             model => model.City,
                                                new AjaxUpdateOptions
                                                {
                                                    DisableTargetWhenEmpty = true,
                                                    Url = Url.Action("GetCityInState", "Home", new { @area = "" })
                                                }
                                                ))
                                @Html.ValidationMessageFor(m => m.State)
                                @*@Html.DropDownListFor(x => x.CountryId, new SelectList(Model.Countries, "CountryId", "CountryName"), "---Select Country---", new { @class = "form-control col-md-7 col-xs-12", required = "required" })*@
                            </div>
                        </div>
                        <div class="form-group role" style="margin-top:-3px;">
                            <label for="inputEmail3" class="col-sm-4 control-label">City:</label>
                            <div class="col-sm-6">
                                @Html.DropDownListFor(x => x.City, new SelectList(Model.Cities, "LookUpCityId", "LookUpCityName"), "---Select City---", new { @class = "form-control col-md-7 col-xs-12", @id = "City", required = "required" })
                            </div>
                        </div>
                        <div class="form-group role" style="margin-top:-3px;">
                            <label for="inputEmail3" class="col-sm-4 control-label">Post Code:</label>
                            <div class="col-sm-6">
                                @Html.TextBoxFor(x => x.PostCode, new { @class = "form-control col-md-7 col-xs-12", name = "PostCode", required = "required" })
                            </div>
                        </div>
                        <div class="form-group role" style="margin-top:-3px;">
                            <label for="inputEmail3" class="col-sm-4 control-label">Date of Birth:</label>
                            <div class="col-sm-6">
                                @Html.TextBoxFor(x => x.DOB, new { @class = "date-picker form-control col-md-7 col-xs-12", name = "DOB", required = "required" })
                            </div>
                        </div>

                        <div class="form-group role" style="margin-top:-3px;">
                            <label for="inputEmail3" class="col-sm-4 control-label">Time Zone:</label>
                            <div class="col-sm-6">
                                @Html.DropDownListFor(x => x.TimeZone, ViewBag.TimeZone as IEnumerable<SelectListItem>, new { @class = "form-control col-md-7 col-xs-12", name = "Timezone" })
                            </div>
                        </div>

                        <div class="form-group role" style="margin-top:-3px;">
                            <label for="inputEmail3" class="col-sm-4 control-label">Profile Picture:</label>
                            <div class="col-sm-6" style="margin-top: 9px; margin-left: 8px;">
                                <img src="@Model.ProfilePic" id="imgProfilePic" height="25" width="25" />
                                <input type="file" name="ProfilePic" id="ProfilePic" onchange="ShowPreview(this)" />
                            </div>
                        </div>





                        @*<div class="ln_solid"></div>
                        <div class="form-group">
                            <div class="col-md-9 col-sm-9 col-xs-12 col-md-offset-3">
                                <button type="button" class="btn btn-primary" onclick="window.history.back()">Cancel</button>
                                <button type="submit" class="btn btn-success">Submit</button>
                            </div>
                        </div>*@
                    </div>

                </div>
            </div>
            <div class="col-md-4 col-xs-12  second layer six">
                <table id="permissions" class="menu_permission">
                    <tbody>
                        @for (var i = 0; i < Model.ModuleList.Count(); i++)
                        {
                            <tr>
                                <td id="mainrow_@i" valign="top">
                                    <a id="imgplus_@i" style="vertical-align:top;"><em class="icon-fixed-width fa fa-plus"></em></a>
                                    <a id="imgmin_@i" style="display: none; vertical-align: top;"><em class="icon-fixed-width fa fa-minus"></em></a>
                                </td>
                                <td valign="top">
                                    @Html.CheckBoxFor(m => Model.ModuleList[i].Selected, new { @class = "main_checkbox", onclick = "checkInnerControl(this);", id = "chk_" + @i, style = "position: relative;" })
                                </td>
                                <td valign="top">
                                    <span class="add_staff">@Model.ModuleList[i].Name</span>
                                    @Html.HiddenFor(x => Model.ModuleList[i].Id)
                                    @Html.HiddenFor(x => Model.ModuleList[i].Name)

                                    <table id="innerrow_@i" class="sub_table" style="display:none;">
                                        <tbody>
                                            @for (var j = 0; j < Model.ModuleList[i].SubModuleList.Count(); j++)
                                            {
                                                <tr>
                                                    <td>&nbsp;</td>
                                                    <td>&nbsp;</td>
                                                    <td>
                                                        @Html.CheckBoxFor(m => Model.ModuleList[i].SubModuleList[j].Selected, new { onclick = "checkParentControl(this);", style = "box-shadow: none !important;" })
                                                        <span class="sub_name">@Model.ModuleList[i].SubModuleList[j].Name</span>
                                                        @Html.HiddenFor(x => Model.ModuleList[i].SubModuleList[j].Id)
                                                        @Html.HiddenFor(x => Model.ModuleList[i].SubModuleList[j].Name)
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

            </div>
            <div class="form-group">
                <div class="col-md-9 col-sm-9 col-xs-12 col-md-offset-3" style="margin-top: 20px;">
                    <button type="button" class="btn btn-primary" onclick="window.history.back();">Cancel</button>
                    <button type="submit" class="btn btn-success">Submit</button>
                </div>
            </div>
        </div>
    </div>

}
   




<script>

    $(document).ready(function () {

        $('#DOB').datepick({ dateFormat: 'dd/mm/yyyy', maxDate: 0 });


        $("#permissions").on("click", "td:first-child", function () {
            var selectedId = $(this).attr("id").split('_')[1];


            if ($("#innerrow_" + selectedId).is(":visible")) {
                $("#innerrow_" + selectedId).hide();
                $("#imgplus_" + selectedId).show();
                $("#imgmin_" + selectedId).hide();
            }
            else {
                $("#innerrow_" + selectedId).show();
                $("#imgplus_" + selectedId).hide();
                $("#imgmin_" + selectedId).show();
            }


        });


    });

    function checkParentControl(obj) {
        var selctedId = obj.id.split('_')[1];
        $('#chk_' + selctedId).prop('checked', true);
    }

    function checkInnerControl(obj) {
        var selctedId = obj.id.split('_')[1];
        var table = $(obj.target).closest('table');

        // $('td input:checkbox', table).attr('checked', 'checked');



        $('#innerrow_' + selctedId).find('input:checkbox').each(function () {
            if (obj.checked)
                this.checked = true;
            else
                this.checked = false;
        });

        //$("#mainrow_0 input:checkbox").attr("checked", "checked");
    }
    function isNumber(evt) {
        evt = (evt) ? evt : window.event;
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode > 31 && (charCode < 48 || charCode > 57)) {
            return false;
        }
        return true;
    }
    function ShowPreview(input) {
        if (input.files && input.files[0]) {
            var ImageDir = new FileReader();
            ImageDir.onload = function (e) {
                $('#imgProfilePic').attr('src', e.target.result);
            }
            ImageDir.readAsDataURL(input.files[0]);
        }
    }

   
  

   
</script>

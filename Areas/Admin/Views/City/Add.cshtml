@model MyOnlineClinic.Web.Models.CityViewModel
@{
    ViewBag.Title = "Add";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}
<section class="content-header staff">
    <h1 class="underline19">
        Add City
    </h1>
</section>
@using (Html.BeginForm("Add", "City", FormMethod.Post, new { @class = "form-horizontal form-label-left" }))
{
    @Html.HiddenFor(m => m.CityId)
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-7 first_layer">
                <div class="form-horizontal" id="style-3">
                    <div class="box-body">
                        <div class="form-group role" style="margin-top:-3px;">
                            <label for="inputEmail3" class="col-sm-4 control-label">Country</label>
                            <div class="col-sm-6">
                                @Html.DropDownListFor(x => x.CountryId, new SelectList(Model.Countries, "CountryId", "CountryName"), "---Select Country---", new { @class = "form-control col-md-7 col-xs-12", required = "required" })
                            </div>
                        </div>
                        <div class="form-group role" style="margin-top:-3px;">
                            <label for="inputEmail3" class="col-sm-4 control-label">State</label>
                            <div class="col-sm-6">
                                @Html.DropDownListFor(x => x.StateId, new SelectList(Model.States, "Id", "StateName"), "---Select State---", new { @class = "form-control col-md-7 col-xs-12" })
                            </div>
                        </div>
                        <div class="form-group role" style="margin-top:-3px;">
                            <label for="inputEmail3" class="col-sm-4 control-label">City Name</label>
                            <div class="col-sm-6">
                                @Html.TextBoxFor(x => x.CityName, new { @class = "form-control col-md-7 col-xs-12", name = "CityName", placeholder = "Enter City Name", required = "required" })
                                @Html.ValidationMessageFor(x => x.CityName)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-6 col-sm-6 col-xs-12 col-md-offset-3" style="text-align:center;">
                                <button type="button" id="btnCancel" class="btn btn-primary">Cancel</button>
                                <button type="submit" class="btn btn-success">Submit</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@*<script src="~/Scripts/CascadingDropDown.js"></script>
<script>
    $('#CountryId').change(function () {
        fillState($("#StateId").attr('id'), $("#City").attr('id'), $("#CountryId").val());
    });
</script>*@
<script src="/AdminAssets/js/validator/validator.js"></script>
<script>
    $('#btnCancel').click(function () {
        window.location = "/admin/City/index";
    })

    $(document).ready(function () {
        $('.date-picker').daterangepicker({
            singleDatePicker: true,
            calender_style: "picker_4"
        }, function (start, end, label) {

        });
    });
    // initialize the validator function
    validator.message['date'] = 'not a real date';

    // validate a field on "blur" event, a 'select' on 'change' event & a '.reuired' classed multifield on 'keyup':
    $('form')
        .on('blur', 'input[required], input.optional, select.required', validator.checkField)
        .on('change', 'select.required', validator.checkField)
        .on('keypress', 'input[required][pattern]', validator.keypress);

    $('.multi.required')
        .on('keyup blur', 'input', function () {
            validator.checkField.apply($(this).siblings().last()[0]);
        });

    // bind the validation to the form submit event
    //$('#send').click('submit');//.prop('disabled', true);

    $('form').submit(function (e) {
        e.preventDefault();
        var submit = true;
        // evaluate the form using generic validaing
        if (!validator.checkAll($(this))) {
            submit = false;
        }

        if (submit)
            this.submit();
        return false;
    });

    /* FOR DEMO ONLY */
    $('#vfields').change(function () {
        $('form').toggleClass('mode2');
    }).prop('checked', false);

    $('#alerts').change(function () {
        validator.defaults.alerts = (this.checked) ? false : true;
        if (this.checked)
            $('form .alert').remove();
    }).prop('checked', false);

    $("#CountryId").change(function () {
        $("#StateId").empty();
        $("#StateId").append($("<option></option>").val('').html('---Select State---'));
        $.ajax({

            type: 'GET',
            url: '/Admin/City/GetState',
            dataType: 'json',
            data: { id: $("#CountryId").val() },
            success: function (data) {
                console.log(data);
                $.each(data, function (key, value) {

                    $("#StateId").append($("<option></option>").val(value.Id).html(value.StateName));
                });
            },
            error: function (ex) {
            }
        });
    });
    $("#StateId").empty();
        $.ajax({
            type: 'GET',
            url: '/Home/Getstate',
            dataType: 'json',
            data: { countyid: $("#CountryId").val() },
            success: function (data) {
                $("#StateId").append($("<option></option>").val(0).html('Select State'));
                $.each(data, function (key, value) {

                    $("#StateId").append($("<option></option>").val(value.Id).html(value.StateName));
                });
            },
            error: function (ex) {
            }
        });   
</script>


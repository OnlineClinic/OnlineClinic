@model MyOnlineClinic.Web.Models.ClinicModel
@{
    ViewBag.Title = "ClinicVisit";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<script src="~/AdminAssets/js/common.js"></script>
<link href="~/AdminAssets/css/datatables/css/jquery.dataTables.css" rel="stylesheet" />
<style type="text/css">
    .tblClinicList td {
        width: 50%;
    }

    .datepick {
        max-width: 100%;
    }

    .datepick-month {
        width: 100%;
    }

    .is-datepick {
        margin: 10px 0;
    }

    .datepick-month td {
        width: 36px;
        height: 36px;
    }

        .datepick-month td a {
            padding: 9px;
        }

        .datepick-month td span {
            padding: 3px;
        }

        .datepick-month td .datepick-weekend {
            background-color: #fff;
        }

    a.datepick-cmd {
        height: 30px;
        padding: 8px 10px;
    }

    .datepick-month-header {
        height: 25px;
    }

        .datepick-month-header select {
            height: 24px;
        }

    .dvSearch {
        margin-top: 10px;
    }

        .dvSearch .btn {
            background: #0aa49c;
            border: 0px;
        }

    #dvChart table tr th {
        background: #0aa49c;
        padding: 10px 5px;
        color: #fff;
        border-right: 1px solid #fff;
    }

    .lnkTime {
        color: black;
        cursor:pointer;
    }

    input#OrganizationName {
        border: 1px solid;
        border-radius: 5px;
        box-shadow: 2px 2px 5px #888888;
        margin-left: 25px;
        width: 81%;
    }

    input#ClinicName {
        border: 1px solid;
        border-radius: 5px;
        box-shadow: 2px 2px 5px #888888;
        margin-left: 25px;
        width: 81%;
    }

    .ui-datepicker-inline.ui-datepicker.ui-widget.ui-widget-content.ui-helper-clearfix.ui-corner-all {
        width: 100%;
    }

    input.clinic_visit {
        box-shadow: none !important;
    }

    span.cal {
        color: #fff;
        font-size: 15px;
    }

    .ui-widget-content {
        border: 1px solid #d9d6c4;
        background: #fff;
        color: #1f1f1f;
    }

    li.ui-menu-item:hover {
        background: rgba(136, 136, 136, 0.56) !important;
    }

    div#dvDoctorList {
        color: #fff;
    }

    .ui-widget-content .ui-icon {
        background-image: url(../../../css/images/ui-icons_222222_256x240.png) !important;
    }
</style>
<section class="content-header" style="margin-top:45px;">
    <h1 class="underline41">
        Clinic Visit
    </h1>
</section>
@using (Html.BeginForm("ClinicVisit", "Patient", FormMethod.Post, new { id = "frmClinicVisit", @class = "form-horizontal form-label-left" }))
{
    <div class="container" style="width:1086px;">
        <div class="row">
            <div class="col-md-12 fifth layer">
                <div class="col-md-3 col-md-offset-3">

                    @Html.TextBoxFor(x => x.OrganizationName, new { @class = "form-control", name = "OrganizationName", placeholder = "Search For Organization" })
                    @Html.HiddenFor(x => x.OrganizationId)
                    @Html.HiddenFor(x => x.PatientId)
                    @Html.HiddenFor(x => x.DoctorId)
                    @Html.HiddenFor(x => x.AppointmentDateTime)
                    @Html.HiddenFor(x => x.ConsultTimeType)
                    <input type="hidden" id="hdnPatientTimeZone" />


                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(x => x.ClinicName, new { @class = "form-control", name = "ClinicName", placeholder = "Search For Clinic" })
                    @Html.HiddenFor(x => x.ClinicId)
                </div>
            </div>
        </div>
    </div>

    <div class="container-fulid">
        <div class="row">
            <div class="col-md-12 thirteen_layer">
                <div class="section-head text-center" style="margin-top:0px;"><h3><span class="frist"> </span>Book Appointment For Clinic Visit<span class="second"></span></h3></div>
                <div class="col-md-12">
                    <div class="col-md-12 ">
                        <div class="col-md-3 fifteen_layer">
                            <div class="col-md-12">
                                <div class="form-horizontal" style="padding-top:13px;">
                                    <div class="form-group role" style="margin-top:-3px;">
                                        <div class="col-sm-12">

                                            <span class="cal"><input type="radio" name="calendarView" class="calendarviewradio" value="1" checked="checked" style="box-shadow:none !important;"> Day View</span>
                                            <span class="cal" style="margin-left: 9px;"><input type="radio" name="calendarView" class="calendarviewradio" value="2" style="box-shadow:none !important;">Week View</span>
                                        </div>
                                    </div>
                                    <div class="form-group role">

                                        <div class="col-sm-12">
                                            <div id="selectAppointmentDate" style="margin-bottom:10px;"></div>
                                        </div>
                                    </div>
                                    <div class="form-group role">
                                        <div class="col-sm-12">
                                            @Html.DropDownListFor(x => x.ProfessionTypeId, new SelectList(Model.ProfessionTypesList, "Id", "ProfessionName"), "---Select Profession---", new { @class = "form-control" })
                                        </div>
                                    </div>
                                    <div class="form-group role">
                                        <div class="col-sm-12">
                                            @Html.DropDownListFor(x => x.ProfessionSub, new SelectList(Model.ProfessionSubList, "SubId", "ProfessionSub"), new { @class = "form-control" })
                                        </div>
                                    </div>
                                    <div class="form-group role">
                                        <div class="col-sm-12">
                                            <div id="dvDoctorList">
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-horizontal" style="padding-top:13px;">

                                        <div class="form-group">
                                            <div class="col-md-3 col-sm-6 col-xs-12 col-md-offset-4" style="text-align:center;">
                                                <button type="button" id="btnFindDoctor" class="btn btn-primary">Find</button>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-9">
                            <div class="myClass" id="dvChart">
                            </div>
                            <input type="hidden" id="hdnSelectedDate" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="timeZoneModel" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog" style="margin:12% auto;">
            <div class="modal-content" style="width:500px;margin-left:10%;">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                    <h4 class="modal-title text-center">
                        <label id="lblTitle">Select Patient TimeZone</label>
                    </h4>
                </div>
                <div class="modal-body">
                    <div id="CreateEditForm">
                    </div>
                    <div class="modal-footer text-center">
                        @Html.DropDownListFor(x => x.TimeZone, ViewBag.TimeZone as IEnumerable<SelectListItem>, new { @class = "form-control col-md-7 col-xs-12 text_row", name = "TimeZoneId", required = "required" })
                    </div>
                    <div style="text-align:center;">
                        <button id="btnGo" type="button" class="btn btn-default btn-md">Go</button>
                        <input type="hidden" id="hdmTimezone" />
                    </div>
                </div>
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>

    <div class="modal fade" id="consultFeeModel" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog ">

            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">
                        <label id="lblTitle">Book an appointment</label>
                    </h4>
                </div>
                <div class="modal-body">
                    <div id="CreateEditForm">
                        <a class="btn btn-default btn-block consult searchpopup" style="color: black;" data-role="@((int)MyOnlineClinic.Entity.ConsultTime.StandardConsult)">Standard Consult(< 15 Min) </a>
                        <a class="btn btn-default btn-block consult searchpopup" style="color: black;" data-role="@((int)MyOnlineClinic.Entity.ConsultTime.LongConsult)">Long Consult(< 30 Min)</a>
                        <a class="btn btn-default btn-block consult searchpopup" style="color: black;" data-role="@((int)MyOnlineClinic.Entity.ConsultTime.VeryLongConsult)">Very Long Consult(< 45 Min)</a>
                    </div>
                </div>
            </div>

            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>
}
<script type="text/javascript" language="javscript">
    $(document).ready(function () {
        var options = {
            "backdrop": "static",
            keyboard: false
        };

         $('#timeZoneModel').modal(options);

        $("#btnGo").click(function () {
            var timeZoneValue = $('#TimeZone').val();
            var hdnPatientTimeZone = $('#hdnPatientTimeZone');
            hdnPatientTimeZone.val(timeZoneValue);

            $('#timeZoneModel').modal('hide');
        });

        var professionString = 'profession';
        var subProfessionString = 'subProfession';

        var controlIds = {
            txtOrganizationName: 'OrganizationName',
            txtOrganizationNameRef: $('#OrganizationName'),

            hdnOrganizationId: 'OrganizationId',
            hdnOrganizationIdRef: $('#OrganizationId'),

            fldClinicList: 'fldClinicList',
            fldClinicListRef: $('#fldClinicList'),

            txtClinicName: 'ClinicName',
            txtClinicNameRef: $('#ClinicName'),

            hdnClinicId: 'ClinicId',
            hdnClinicIdRef: $('#ClinicId'),

            dvDoctorList: 'dvDoctorList',
            dvDoctorListRef: $('#dvDoctorList'),

            ddlProfessionTypeId: 'ProfessionTypeId',
            ddlProfessionTypeIdRef: $('#ProfessionTypeId'),

            ddlProfessionSub: 'ProfessionSub',
            ddlProfessionSubRef: $('#ProfessionSub'),

            dvChart: 'dvChart',
            dvChartRef: $('#dvChart')
        }

        var htmlString = {
            dvDoctorHtmlString: '<div id="dvDoctorId">' +
                          '<input type="checkbox" class="clinic_visit" value="¶DoctorId" data-role="¶Profession" data-id="¶SubProfession">' +
                           '&nbsp;¶DoctorName' +
                           '</div>',

            dvChartFirstHtml: '<div class="col-md-4">' +
                               '<div class="table-responsive data">' +
                               '<table id="mytable" class="table table-hover table-bordered">' +
                               '<thead id="¶THeadId" style="color:#fff;">' +
                               '</thead>' +
                               '<tbody id="¶TBodyId">' +
                               '</tbody>' +
                               '</table>' +
                               '</div>' +
                               '</div>',

            dvChartHtml: '<div class="col-md-4 second_data">' +
                          '<div class="table-responsive data">' +
                          '<table id="mytable" class="table table-hover table-bordered">' +
                          '<thead id="¶THeadId" style="color:#fff;" >' +
                          '</thead>' +
                          '<tbody id="¶TBodyId"></tbody>' +
                          '</table>' +
                          '</div>' +
                          '</div>',


            trChartHeadingHtml: '<tr>' +
                                '<th class="top">Time</th>' +
                                '<th class="top">' +
                                '¶DoctorName<br>' +
                                '¶DateTime' +
                                '</th>' +
                                '</tr>',

            trChartBodyHtml: '<tr class="info">' +
                                '<td style="vertical-align:middle;"><a class="lnkTime" data-role="¶DoctorId">¶Time</a></td>' +
                                '<td style="vertical-align:middle;"></td>' +
                                '</tr>'
        }

        $('#' + controlIds.txtOrganizationName).autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("GetOrganizationListForAppointment/")',
                    data: { query: request.term },
                    dataType: 'json',
                    type: 'GET',
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                label: item.OrganizationName,
                                value: item.OrganizationId
                            }
                        }));
                    },
                    error: function myfunction(err) {
                        console.log("error: autocomplete OrganizationName");
                        console.log(err);
                    }
                })
            },
            select: function (event, ui) {
                controlIds.fldClinicListRef.css('display', 'block');
                controlIds.txtOrganizationNameRef.val(ui.item.label);
                controlIds.hdnOrganizationIdRef.val(ui.item.value);
                controlIds.txtClinicNameRef.focus();
                return false;
            },
            minLength: 0
        }).focus(function () {
            $(this).autocomplete("search", "");
        });

        $('#' + controlIds.txtClinicName).autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("GetClinicList/")',
                    data: { id: $('#' + controlIds.hdnOrganizationId).val(), query: request.term },
                    dataType: 'json',
                    type: 'GET',
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                label: item.ClinicName,
                                value: item.ClinicId
                            }
                        }));
                    },
                    error: function myfunction(err) {
                        console.log("error: autocomplete Clinic");
                        console.log(err);
                    }
                })
            },
            select: function (event, ui) {
                var clinicId = ui.item.value;
                controlIds.txtClinicNameRef.val(ui.item.label);
                controlIds.hdnClinicIdRef.val(clinicId);
                getDoctorList(clinicId);
                $('#' + controlIds.ddlProfessionTypeId).val('');
                $('#' + controlIds.ddlProfessionTypeId).trigger('change');
                return false;
            },
            minLength: 0
        }).focus(function () {
            $(this).autocomplete("search", "");
        });

        $('#' + controlIds.ddlProfessionTypeId).change(function () {
            var professionTypeId = controlIds.ddlProfessionTypeIdRef.val();

            controlIds.ddlProfessionSubRef.empty();
            controlIds.ddlProfessionSubRef.append($("<option></option>").val('').html('---Select Profession Sub---'));

            if (professionTypeId != '' && Math.abs(professionTypeId) > 1) {
                ajaxParam.url = '/Admin/Patient/GetProfessionSubCategory';
                ajaxParam.requestType = 'GET';
                ajaxParam.dataType = 'json';
                ajaxParam.data = { id: professionTypeId };
                ajaxParam.successCallbackFunction = addItemsInSubProfession;
                doAjax(ajaxParam);
            }
            else {
                hideDivAndClearCheckboxes(professionString);
            }
        });

        function addItemsInSubProfession(data) {
            controlIds.ddlProfessionSubRef.empty();
            controlIds.ddlProfessionSubRef.append($("<option></option>").val('').html('---Select Profession Sub---'));

            $.each(data, function (key, value) {
                controlIds.ddlProfessionSubRef.append($("<option></option>").val(value.SubId).html(value.ProfessionSub));
            });

            hideDivAndClearCheckboxes(professionString);
        }

        function hideDivAndClearCheckboxes(forType) {
            var attrValue = forType == 'profession' ? 'data-role' : 'data-id';
            var id = forType == 'profession' ? controlIds.ddlProfessionTypeIdRef.val() : controlIds.ddlProfessionSubRef.val();

            $("#dvDoctorList input[type=checkbox]").each(function () {
                var chkId = $(this).attr(attrValue);
                var chkValue = $(this).attr('value');
                var dvDoctorId = 'dvDoctorId' + chkValue.toString();
                $('#' + dvDoctorId).css("display", "block");
                if (chkId == null) chkId = '';

                if (id != null && id != '') {
                    if (id != chkId) {
                        $(this).attr('checked', false);
                        $('#' + dvDoctorId).css("display", "none");
                    }
                }
            });
        }

        function getRandomInt(min, max) {

            return Math.floor(Math.random() * (max - min + 1)) + min;
        }

        $('#' + controlIds.ddlProfessionSub).change(function () {
            hideDivAndClearCheckboxes(subProfessionString);
        });

        $("#btnFindDoctor").click(function () {
            if (validateSearch()) {
                controlIds.dvChartRef.html('');

                var selectedDates = '';
                var dates = $('#selectAppointmentDate').multiDatesPicker('getDates');
                var arrDates = dates.toString().split(',');

                for (var i = 0; i < arrDates.length; i++) {
                    var searchDateTime = new Date(arrDates[i]);
                    var date = ('0' + searchDateTime.getDate()).slice(-2);
                    var month = ("0" + (searchDateTime.getMonth() + 1)).slice(-2);
                    var year = searchDateTime.getFullYear();
                    var searchDate = date.toString() + "/" + month.toString() + '/' + year.toString();
                    selectedDates += searchDate + '¶';
                }
                selectedDates = selectedDates.slice(0, -1);

                document.getElementById('hdnSelectedDate').value = searchDate;
                var selectedDocrorIds = getSelectedCheckBoxValue(controlIds.dvDoctorList);

                $.ajax({
                    type: 'GET',
                    url: '/Admin/Patient/GetAvabilityChart',
                    dataType: 'json',
                    data: { doctorIds: selectedDocrorIds, searchDate: selectedDates },
                    success: function (data) {
                        console.log(data);
                        if (data != null) {
                            for (var i = 0; i < data.data.length; i++) {

                                var html = $('<div class="row" id="dvRa' + i.toString() + '"></div>');
                                controlIds.dvChartRef.append(html);

                                for (var j = 0; j < data.data[i].length; j++) {
                                    var appendString = '';
                                    if (j == 0)
                                        appendString = htmlString.dvChartFirstHtml;
                                    else
                                        appendString = htmlString.dvChartHtml;

                                    var randomNumber = getRandomInt(1, 1000);

                                    appendString = appendString.replace('¶THeadId', 'THeadId' + randomNumber);
                                    appendString = appendString.replace('¶TBodyId', 'TBodyId' + randomNumber);

                                    $('#dvRa' + i.toString()).append(appendString);

                                    var THeadId = $('#THeadId' + randomNumber);
                                    var TBodyId = $('#TBodyId' + randomNumber);

                                    var chartHeadingHtml = htmlString.trChartHeadingHtml;
                                    chartHeadingHtml = chartHeadingHtml.replace('¶DoctorName', data.data[i][j].DoctorName);
                                    chartHeadingHtml = chartHeadingHtml.replace('¶DateTime', data.data[i][j].Date);
                                    THeadId.append(chartHeadingHtml);


                                    for (var k = 0; k < data.data[i][j].time.length; k++) {
                                        var chartBodyHtml = htmlString.trChartBodyHtml;
                                        chartBodyHtml = chartBodyHtml.replace('¶DoctorId', data.data[i][j].DoctorId);
                                        chartBodyHtml = chartBodyHtml.replace('¶Time', data.data[i][j].time[k]);
                                        TBodyId.append(chartBodyHtml);
                                    }
                                }

                            }
                        }
                    },
                    error: function (ex) {
                        console.log("error: btnFindDoctor Ajax Call");
                        console.log(err);
                    }
                });
            }
        });

        function getDoctorList(clinicId) {
            var dvAppendString = htmlString.dvDoctorHtmlString;

            var dvDoctorList = $('#dvDoctorList');
            dvDoctorList.html('');

            var actionUrl = '@Url.Action("GetDoctorList/")';

            if (clinicId != '' && Math.abs(clinicId) > 0) {
                $.ajax({
                    type: 'GET',
                    url: actionUrl,
                    dataType: 'json',
                    data: { clinicId: clinicId },
                    success: function (data) {
                        if (data.length > 0) {
                            //$('#dvAvability').css('display', 'block');
                        }
                        $.each(data, function (key, value) {
                            var appendString = dvAppendString.replace('¶DoctorId', value.MemberId);
                            appendString = appendString.replace('¶Profession', value.Profession);
                            appendString = appendString.replace('¶SubProfession', value.ProfessionCategory);
                            appendString = appendString.replace('¶DoctorName', value.FirstName);
                            appendString = appendString.replace('dvDoctorId', 'dvDoctorId' + value.MemberId);
                            dvDoctorList.append(appendString);
                        });
                    },
                    error: function (ex) {
                        console.log("error: getDoctorList")
                        console.log(err);
                    }
                });
            }
        }

        $(document).on('click', '.lnkTime', function () {
            var options = {
                "backdrop": "static",
                keyboard: false
            };

            $('#consultFeeModel').modal(options);

            var lnkTime = $(this);
            var doctorId = $(this).attr('data-role');
            var lnkValue = lnkTime.html();
            var selectedDate = document.getElementById('hdnSelectedDate').value;

            var selectedDateTime = selectedDate + " " + lnkValue;
            document.getElementById("DoctorId").value = doctorId;
            document.getElementById('AppointmentDateTime').value = selectedDateTime;
        });

        $(document).on('click', '.searchpopup', function () {
            var lnkConsutlFee = $(this);
            var consutlFeeType = $(this).attr('data-role');
            var hdnConsultType = $('#ConsultTimeType');
            hdnConsultType.val(consutlFeeType);

            var selectedDateTime = document.getElementById('AppointmentDateTime').value;

            if (confirm("Are you sure you want to book this appointment for " + selectedDateTime + "?")) {
                var frmClinicVisit = $('#frmClinicVisit');

                if (frmClinicVisit != null) {
                    frmClinicVisit.submit();
                }
            }
        });

        $(".calendarviewradio").click(function () {
            var calendarViewValue = parseInt($(this).val());
            var selectAppointmentDate = $('#selectAppointmentDate');

            if (calendarViewValue === 1) {
                selectAppointmentDate.multiDatesPicker({ mode: 'daysRange', autoselectRange: [0, 1] });
            }
            else if (calendarViewValue === 2) {
                selectAppointmentDate.multiDatesPicker({ mode: 'daysRange', autoselectRange: [0, 7] });
            }
        })
    });

    function validateCheckBox() {
        var validate = false;
        var dvDoctorList = document.getElementById('dvDoctorList');
        var inputs = dvDoctorList.getElementsByTagName('input');

        for (var i = 0; i < inputs.length; i++) {
            if (inputs[i].type == 'checkbox' && inputs[i].checked) {
                validate = true;
                break;
            }
        }
        return validate;
    }

    function validateSearch() {
        var ddlProfessionTypeId = $('#ProfessionTypeId');
        var ProfessionTypeId = ddlProfessionTypeId.val();

        var selectedDate = $('#selectAppointmentDate').multiDatesPicker('getDates');

        if (ProfessionTypeId == '' || Math.abs(ProfessionTypeId) == 0) {
            alert('Please select ProfessionType');
            return false;
        }
        else if (!validateCheckBox()) {
            alert('Please select at least one doctor');
            return false;
        }
        else if (selectedDate == '') {
            alert('Please select date');
            return false;
        }
        return true;
    }
</script>

<script type="text/javascript" language="javascript">

    var latestMDPver = $.ui.multiDatesPicker.version;
    var lastMDPupdate = '2014-09-19';

    $(function () {
        $('#selectAppointmentDate').multiDatesPicker({ mode: 'daysRange', autoselectRange: [0, 1] });

        // Version //
        //$('title').append(' v' + latestMDPver);
        $('.mdp-version').text('v' + latestMDPver);
        $('#mdp-title').attr('title', 'last update: ' + lastMDPupdate);

        // Documentation //
        $('i:contains(type)').attr('title', '[Optional] accepted values are: "allowed" [default]; "disabled".');
        $('i:contains(format)').attr('title', '[Optional] accepted values are: "string" [default]; "object".');
        $('#how-to h4').each(function () {
            var a = $(this).closest('li').attr('id');
            $(this).wrap('<' + 'a href="#' + a + '"></' + 'a>');
        });
        $('#demos .demo').each(function () {
            var id = $(this).find('.box').attr('id') + '-demo';
            $(this).attr('id', id)
                .find('h3').wrapInner('<' + 'a href="#' + id + '"></' + 'a>');
        });

        // Run Demos
        $('.demo .code').each(function () {
            eval($(this).attr('title', 'NEW: edit this code and test it!').text());
            this.contentEditable = true;
        }).focus(function () {
            if (!$(this).next().hasClass('test'))
                $(this)
                    .after('<button class="test">test</button>')
                    .next('.test').click(function () {
                        $(this).closest('.demo').find('.hasDatepicker').multiDatesPicker('destroy');
                        eval($(this).prev().text());
                        $(this).remove();
                    });
        });
    });
</script>

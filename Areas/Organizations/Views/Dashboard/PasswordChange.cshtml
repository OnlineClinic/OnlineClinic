@model MyOnlineClinic.Web.Models.ChangePasswordViewModel
@{
    ViewBag.Title = "PasswordChange";
    Layout = "~/Areas/Organizations/Views/Shared/_OrganizationLayout.cshtml";
}
<section class="content-header staff">
    <h1 class="underline19">
        Change Password
    </h1>
</section>

@using (Html.BeginForm("PasswordChange", "DashBoard", FormMethod.Post, new { @class = "form-horizontal form-label-left" }))
{

    <div class="row">
        <div class="col-md-12">
            <div class="col-md-7 first_layer">
                <div class="form-horizontal" id="style-3">
                    <div class="box-body">
                        <div class="form-group role" style="margin-top:-3px;">
                            <label for="inputEmail3" class="col-sm-4 control-label">Current Password:</label>
                            <div class="col-sm-6">
                                @Html.TextBoxFor(x => x.OldPassword, new { @class = "form-control col-md-7 col-xs-12", name = "OldPassword", placeholder = "Please Enter Your Old Password", required = "required", type = "password" })
                                <div style="color:red">
                                    @Html.ValidationMessage("OldPassword")

                                </div>
                            </div>
                        </div>
                        <div class="form-group role" style="margin-top:-3px;">
                            <label for="inputEmail3" class="col-sm-4 control-label">Password:</label>
                            <div class="col-sm-6">
                                @Html.TextBoxFor(x => x.Password, new { @class = "form-control col-md-7 col-xs-12", name = "Password", placeholder = "Please Enter Your Password", required = "required", type = "password" })
                                <div style="color:red">
                                    @Html.ValidationMessageFor(m => m.Password)
                                </div>
                            </div>
                        </div>
                        <div class="form-group role" style="margin-top:-3px;">
                            <label for="inputEmail3" class="col-sm-4 control-label">Retype Password:</label>
                            <div class="col-sm-6">
                                @Html.TextBoxFor(x => x.ConfirmPassword, new { @class = "form-control col-md-7 col-xs-12", name = "RetypePassword", placeholder = "Please Retype Your Password", required = "required", type = "password" })

                                <div style="color:red">
                                    @Html.ValidationMessageFor(m => m.ConfirmPassword)
                                </div>
                            </div>
                        </div>
                        <div style="color:red;margin-left:26%;">
                            @Html.ValidationMessage("Done")
                        </div>
                        <div class="form-group">
                            <div class="col-md-6 col-sm-6 col-xs-12 col-md-offset-3" style="text-align:center;">
                                <button type="button" id="btnCancel" class="btn btn-primary">Cancel</button>
                                <button id="send" type="submit" class="btn btn-success">Submit</button>
                            </div>
                        </div>


                    </div>
                </div>
            </div>
        </div>
    </div>
}
<script src="/AdminAssets/js/validator/validator.js"></script>
<script>
    $('#btnCancel').click(function () {
        window.location = "/Organizations/DashBoard";
    })

    // validate a field on "blur" event, a 'select' on 'change' event & a '.reuired' classed multifield on 'keyup':
    $('form')
        .on('blur', 'input[required], input.optional, select.required', validator.checkField)
        .on('change', 'select.required', validator.checkField)
        .on('keypress', 'input[required][pattern]', validator.keypress);

    $('.multi.required')
        .on('keyup blur', 'input', function () {
            validator.checkField.apply($(this).siblings().last()[0]);
        });

    // bind the validation to the form submit event
    //$('#send').click('submit');//.prop('disabled', true);

    $('form').submit(function (e) {
        e.preventDefault();
        var submit = true;
        // evaluate the form using generic validaing
        if (!validator.checkAll($(this))) {
            submit = false;
        }

        if (submit)
            this.submit();
        return false;
    });

    /* FOR DEMO ONLY */

</script>


